<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\..\FrameXML\UI.xsd">
  
  <!-- Template for drag frames. -->
  <Frame name="DiceMasterDragFrameTemplate" toplevel="true" hidden="true" virtual="true">
	<Layers>
		<Layer level="OVERLAY">
			<Texture parentKey="Overlay" file=" " alpha="0.25" setAllPoints="true">
			</Texture>
			<FontString parentKey="Title" inherits="GameFontNormalSmall" setAllPoints="true" text="">
				<Anchors>
					<Anchor point="CENTER" x="0" y="0"/>
				</Anchors>
			</FontString>
		</Layer>
	</Layers>
	<Scripts>
		<OnLoad>
			tinsert(DiceMaster4.snapBars, self:GetParent())
		</OnLoad>
		<OnShow>
			local StickyFrames = LibStub("LibSimpleSticky-1.0")
			local frame = self:GetParent()
			frame:SetClampedToScreen( true )
			frame:SetMovable(true)
			frame:EnableMouse(true)
			frame:RegisterForDrag( "LeftButton" )
			frame:SetUserPlaced( true )
			frame:SetScript( "OnDragStart", DiceMaster4.BarOnDragStart)
			frame:SetScript( "OnDragStop", DiceMaster4.BarOnDragStop)
			self.Title:SetText(self:GetParent().Title)
			
			local kids = { frame:GetChildren() }
			for _, child in pairs(kids) do
				if child:IsMouseEnabled() then
					child:EnableMouse(false)
				end
			end
		</OnShow>
		<OnHide>
			local frame = self:GetParent()
			frame:RegisterForDrag( false )
			local kids = { frame:GetChildren() }
			for _, child in pairs(kids) do
				if not child:IsMouseEnabled() then
					child:EnableMouse(true)
				end
			end
		</OnHide>
	</Scripts>
  </Frame>
  
  <Frame name="DiceMasterUnlockDialog" parent="UIParent" inherits="BackdropTemplate" hidden="true" framestrata="DIALOG">
	<Size x="360" y="110"/>
	<Anchors>
		<Anchor point="TOP" x="0" y="-50"/>
	</Anchors>
	<KeyValues>
		<KeyValue key="backdropInfo" value="BACKDROP_DIALOG_32_32" type="global"/>
	</KeyValues>
	<Layers>
		<Layer level="ARTWORK">
			<Texture parentKey="Header" file="Interface/DialogFrame/UI-DialogBox-Header">
				<Size x="256" y="64"/>
				<Anchors>
					<Anchor point="TOP" x="0" y="12"/>
				</Anchors>
			</Texture>
			<FontString parentKey="Title" inherits="GameFontNormal" text="DiceMaster">
				<Anchors>
					<Anchor point="TOP" relativeKey="$parent.Header" relativePoint="TOP" x="0" y="-14"/>
				</Anchors>
			</FontString>
			<FontString parentKey="Desc" inherits="GameFontHighlight" justifyV="TOP" justifyH="LEFT" text="Frames unlocked. Move them now and click Lock when you are done.">
				<Anchors>
					<Anchor point="TOPLEFT" x="18" y="-32"/>
					<Anchor point="BOTTOMRIGHT" x="-18" y="48"/>
				</Anchors>
			</FontString>
		</Layer>
	</Layers>
	<Frames>
		<CheckButton parentKey="LockBars" inherits="OptionsButtonTemplate" text="Lock">
			<Anchors>
				<Anchor point="BOTTOMRIGHT" x="-14" y="14"/>
			</Anchors>
			<Scripts>
				<OnClick>
					DiceMaster4.LockFrames()
				</OnClick>
			</Scripts>
		</CheckButton>
		<CheckButton name="$parent.Snapping" parentKey="Snapping" inherits="OptionsCheckButtonTemplate">
			<Anchors>
				<Anchor point="BOTTOMLEFT" x="14" y="10"/>
			</Anchors>
			<Scripts>
				<OnClick>
					DiceMaster4.db.global.snapping = self:GetChecked()
				</OnClick>
				<OnLoad>
					_G[self:GetName().."Text"]:SetText("Bar Snapping")
				</OnLoad>
				<OnShow>
					self:SetChecked(DiceMaster4.db.global.snapping )
				</OnShow>
			</Scripts>
		</CheckButton>
	</Frames>
	<Scripts>
		<OnLoad inherit="prepend">
			self:SetClampedToScreen( true )
			self:SetMovable(true)
			self:EnableMouse(true)
			self:RegisterForDrag( "LeftButton" )
			self:SetScript( "OnDragStart", self.StartMoving )
			self:SetScript( "OnDragStop", self.StopMovingOrSizing )
			self:SetUserPlaced( true )
			
			DiceMaster4.snapBars = { WorldFrame, UIParent }
		</OnLoad>
		<OnShow>
			PlaySound(SOUNDKIT.IG_MAINMENU_OPTION)
			DiceMaster4.FramesUnlocked = true
		</OnShow>
		<OnHide>
			PlaySound(SOUNDKIT.GS_TITLE_OPTION_EXIT) 
			DiceMaster4.FramesUnlocked = false
		</OnHide>
	</Scripts>
  </Frame>
  
  <Button name="DiceMasterCursorOverlay" parent="UIParent" frameStrata="BACKGROUND" setAllPoints="true" hidden="true" enableMouse="true">
	<Layers>
		<Layer level="ARTWORK">
			<Texture parentKey="item" setAllPoints="true"/>
		</Layer>
	</Layers>
	<Scripts>
		<OnLoad>
			self:RegisterForClicks("LeftButtonUp","RightButtonUp");
		</OnLoad>
		<OnClick>
			if button == "RightButton" then
				ResetCursor();
				ClearCursor();
				self:Hide();
				DiceMasterCursorItemIcon.item:SetTexture(nil)
				DiceMasterCursorItemIcon.itemID = nil
				DiceMasterCursorItemIcon.copyCursor = nil
				DiceMasterCursorItemIcon.copyItem = nil
				DiceMasterCursorItemIcon.copyAmount = nil
				DiceMasterCursorItemIcon.editCursor = nil
				DiceMasterCursorItemIcon.sellCursor = nil
				if DiceMasterCursorItemIcon.prevButton then
					SetItemButtonDesaturated(DiceMasterCursorItemIcon.prevButton, false);
					PlaySound(1203)
				end
			elseif button == "LeftButton" and DiceMasterCursorItemIcon.itemID then
				StaticPopup_Show( "DICEMASTER4_DESTROYCUSTOMITEM", nil, nil, DiceMasterCursorItemIcon.itemID )
			end
		</OnClick>
	</Scripts>
  </Button>
  
  <Frame name="DiceMasterCursorItemIcon" parent="UIParent" frameStrata="FULLSCREEN_DIALOG" hidden="true">
	<Size x="26" y="26"/>
	<Layers>
		<Layer level="ARTWORK">
			<Texture parentKey="item" setAllPoints="true"/>
		</Layer>
	</Layers>
	<Scripts>
		<OnUpdate>
			local x, y = GetCursorPosition();
			local s = self:GetEffectiveScale();
			self:SetPoint("TOPLEFT", "UIParent", "BOTTOMLEFT", (x / s), (y / s));
		</OnUpdate>
	</Scripts>
  </Frame>
  
  <Frame name="DiceMasterFullscreenEffectFrame" parent="UIParent" frameStrata="BACKGROUND">
	<Size x="500" y="500" />
	<Anchors>
		<Anchor point="CENTER"/>
	</Anchors>
	<Frames>
		<CinematicModel parentKey="Model" setAllPoints="true">
			<Scripts>
				<OnShow>
					self:SetDisplayInfo( 6908 )
					self:SetPosition( -20, 7.7, 0 )
				</OnShow>
			</Scripts>
		</CinematicModel>
	</Frames>
	<Scripts>
		<OnLoad>
			self:SetSize( GetScreenWidth(), GetScreenHeight() )
		</OnLoad>
	</Scripts>
  </Frame>
  <Include file="Ui\Fonts.xml"/>
  
  <!-- Intrinsics/Widgets -->
  <Include file="Ui\Widgets\StatusBar.xml"/>
  <Include file="Ui\Widgets\TraitButton.xml"/>
  <Include file="Ui\Widgets\UnitPowerBar.xml"/>
  <Include file="Ui\Widgets\MapNode.xml"/>
  
  <!-- Frames -->
  <Include file="Ui\Panel.xml"/>
  <Include file="Ui\TraitEditor.xml"/>
  <Include file="Ui\StatInspector.xml"/>
  <Include file="Ui\Charges.xml"/>
  <Include file="Ui\IconPicker.xml"/>
  <Include file="Ui\ColourPicker.xml"/>
  <Include file="Ui\SoundPicker.xml"/>
  <Include file="Ui\ModelPicker.xml"/>
  <Include file="Ui\EffectPicker.xml"/>
  <Include file="Ui\Buffs.xml"/>
  <Include file="Ui\InspectFrame.xml"/>
  <Include file="Ui\RollTracker.xml"/>
  <Include file="Ui\RollBanner.xml"/>
  <Include file="Ui\PostTracker.xml"/>
  <Include file="Ui\TurnTracker.xml"/>
  <Include file="Ui\MoraleBar.xml"/>
  <Include file="Ui\RangeRadar.xml"/>
</Ui>
 
